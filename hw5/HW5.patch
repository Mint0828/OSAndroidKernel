diff --git a/arch/arm/kernel/Makefile b/arch/arm/kernel/Makefile
index 22b0f1e..51021dc 100644
--- a/arch/arm/kernel/Makefile
+++ b/arch/arm/kernel/Makefile
@@ -17,7 +17,7 @@ CFLAGS_REMOVE_return_address.o = -pg
 
 obj-y		:= elf.o entry-armv.o entry-common.o irq.o opcodes.o \
 		   process.o ptrace.o return_address.o sched_clock.o \
-		   setup.o signal.o stacktrace.o sys_arm.o time.o traps.o
+		   setup.o signal.o stacktrace.o sys_arm.o set_mlimit.o time.o traps.o
 
 obj-$(CONFIG_DEPRECATED_PARAM_STRUCT) += compat.o
 
diff --git a/arch/arm/kernel/calls.S b/arch/arm/kernel/calls.S
index 463ff4a..ecd25e6 100644
--- a/arch/arm/kernel/calls.S
+++ b/arch/arm/kernel/calls.S
@@ -387,6 +387,7 @@
 /* 375 */	CALL(sys_setns)
 		CALL(sys_process_vm_readv)
 		CALL(sys_process_vm_writev)
+		CALL(set_mlimit)
 #ifndef syscalls_counted
 .equ syscalls_padding, ((NR_syscalls + 3) & ~3) - NR_syscalls
 #define syscalls_counted
diff --git a/arch/arm/kernel/set_mlimit.c b/arch/arm/kernel/set_mlimit.c
new file mode 100644
index 0000000..b9f369b
--- /dev/null
+++ b/arch/arm/kernel/set_mlimit.c
@@ -0,0 +1,12 @@
+#include <linux/sched.h>
+#include <asm-generic/errno-base.h>
+#include <linux/syscalls.h>
+#include <asm/thread_info.h>
+
+asmlinkage int set_mlimit(uid_t uid, long mem_max)
+{
+	
+	struct user_struct * user = find_user(uid);
+	user->mem_max = mem_max;
+	return user->mem_max;
+}
\ No newline at end of file
diff --git a/include/linux/sched.h b/include/linux/sched.h
index ff6bb0f..ed94c34 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -736,6 +736,7 @@ struct user_struct {
 #ifdef CONFIG_PERF_EVENTS
 	atomic_long_t locked_vm;
 #endif
+	long mem_max;
 };
 
 extern int uids_sysfs_init(void);
@@ -1619,6 +1620,7 @@ struct task_struct {
 #ifdef CONFIG_HAVE_HW_BREAKPOINT
 	atomic_t ptrace_bp_refcnt;
 #endif
+
 };
 
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
